{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Components/FilteredMovies.js\",\n  _s = $RefreshSig$();\nimport \"../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../Utils/options\";\nimport AddMovieButton from \"./AddMovieButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilteredMovies({\n  searchValue\n}) {\n  _s();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  useEffect(() => {\n    if (searchValue) {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(searchValue)}`;\n      fetch(url, options).then(response => response.json()).then(data => {\n        setFilteredMovies(data.results);\n      });\n    }\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"parent-grid-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: filteredMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divForImg\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"grid-image\",\n            src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n            alt: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddMovieButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(FilteredMovies, \"hJuu0fwTnlIE4CIiT2ArREt41c4=\");\n_c = FilteredMovies;\nexport default FilteredMovies;\nvar _c;\n$RefreshReg$(_c, \"FilteredMovies\");","map":{"version":3,"names":["useEffect","useState","options","AddMovieButton","jsxDEV","_jsxDEV","FilteredMovies","searchValue","_s","filteredMovies","setFilteredMovies","url","encodeURIComponent","fetch","then","response","json","data","results","id","children","className","map","movie","index","src","poster_path","alt","original_title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Components/FilteredMovies.js"],"sourcesContent":["import \"../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../Utils/options\";\nimport AddMovieButton from \"./AddMovieButton\";\n\nfunction FilteredMovies({ searchValue }) {\n  const [filteredMovies, setFilteredMovies] = useState([]);\n\n  useEffect(() => {\n    if (searchValue) {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(\n        searchValue\n      )}`;\n\n      fetch(url, options)\n        .then((response) => response.json())\n        .then((data) => {\n          setFilteredMovies(data.results);\n        });\n    }\n  }, [searchValue]);\n\n  return (\n    <div id='parent-grid-container'>\n      <div className='grid-container'>\n        {filteredMovies.map((movie, index) => (\n          <div className='movie-container' key={index}>\n            <div className='divForImg'>\n              <img\n                id='grid-image'\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n            </div>\n            <AddMovieButton />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FilteredMovies;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,cAAcA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAE;MACf,MAAMI,GAAG,GAAI,mDAAkDC,kBAAkB,CAC/EL,WACF,CAAE,EAAC;MAEHM,KAAK,CAACF,GAAG,EAAET,OAAO,CAAC,CAChBY,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdP,iBAAiB,CAACO,IAAI,CAACC,OAAO,CAAC;MACjC,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjB,oBACEF,OAAA;IAAKc,EAAE,EAAC,uBAAuB;IAAAC,QAAA,eAC7Bf,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5BX,cAAc,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/BnB,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9Bf,OAAA;UAAKgB,SAAS,EAAC,WAAW;UAAAD,QAAA,eACxBf,OAAA;YACEc,EAAE,EAAC,YAAY;YACfM,GAAG,EAAG,mCAAkCF,KAAK,CAACG,WAAY,EAAE;YAC5DC,GAAG,EAAEJ,KAAK,CAACK;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN3B,OAAA,CAACF,cAAc;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GARkBR,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAStC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAnCQF,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}