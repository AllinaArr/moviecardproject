{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Components/Filters/FilteredMovies.js\",\n  _s = $RefreshSig$();\nimport \"../../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../../Utils/options\";\nimport HoverBtns from \"../Buttons/HoverBtns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilteredMovies({\n  searchValue\n}) {\n  _s();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  useEffect(() => {\n    if (searchValue) {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(searchValue)}`;\n      fetch(url, options).then(response => response.json()).then(data => {\n        setFilteredMovies(data.results);\n      });\n    }\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(HoverBtns, {\n    listOfMovies: filteredMovies\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_s(FilteredMovies, \"hJuu0fwTnlIE4CIiT2ArREt41c4=\");\n_c = FilteredMovies;\nexport default FilteredMovies;\nvar _c;\n$RefreshReg$(_c, \"FilteredMovies\");","map":{"version":3,"names":["useEffect","useState","options","HoverBtns","jsxDEV","_jsxDEV","FilteredMovies","searchValue","_s","filteredMovies","setFilteredMovies","url","encodeURIComponent","fetch","then","response","json","data","results","listOfMovies","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Components/Filters/FilteredMovies.js"],"sourcesContent":["import \"../../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../../Utils/options\";\nimport HoverBtns from \"../Buttons/HoverBtns\";\n\nfunction FilteredMovies({ searchValue }) {\n  const [filteredMovies, setFilteredMovies] = useState([]);\n\n  useEffect(() => {\n    if (searchValue) {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(\n        searchValue\n      )}`;\n\n      fetch(url, options)\n        .then((response) => response.json())\n        .then((data) => {\n          setFilteredMovies(data.results);\n        });\n    }\n  }, [searchValue]);\n\n  return <HoverBtns listOfMovies={filteredMovies} />;\n}\n\nexport default FilteredMovies;\n"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAOC,SAAS,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,cAAcA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAE;MACf,MAAMI,GAAG,GAAI,mDAAkDC,kBAAkB,CAC/EL,WACF,CAAE,EAAC;MAEHM,KAAK,CAACF,GAAG,EAAET,OAAO,CAAC,CAChBY,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdP,iBAAiB,CAACO,IAAI,CAACC,OAAO,CAAC;MACjC,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjB,oBAAOF,OAAA,CAACF,SAAS;IAACgB,YAAY,EAAEV;EAAe;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD;AAACf,EAAA,CAlBQF,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAoBvB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}