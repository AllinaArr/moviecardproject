{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Pages/Home.js\",\n  _s = $RefreshSig$();\nimport FilteredMovies from \"../Components/FilteredMovies\";\nimport React from \"react\";\nimport \"../index.css\";\nimport { useState } from \"react\";\nimport SearchBar from \"../Components/SearchBar\";\nimport UpcomingMovies from \"../Components/UpcomingMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1`, options).then(response => response.json()).then(data => {\n      onSetMovies(data.results);\n    }).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        searchValue: searchValue,\n        onChangeValue: event => setSearchValue(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FilteredMovies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UpcomingMovies, {\n        listOfMovies: movies,\n        onSetMovies: setMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"0R+dw2CpF9gJBQeJw//toRPblz0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["FilteredMovies","React","useState","SearchBar","UpcomingMovies","jsxDEV","_jsxDEV","Home","_s","filteredMovies","setFilteredMovies","searchValue","setSearchValue","movies","setMovies","useEffect","fetch","options","then","response","json","data","onSetMovies","results","catch","err","console","error","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onChangeValue","event","target","value","listOfMovies","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Pages/Home.js"],"sourcesContent":["import FilteredMovies from \"../Components/FilteredMovies\";\nimport React from \"react\";\nimport \"../index.css\";\nimport { useState } from \"react\";\nimport SearchBar from \"../Components/SearchBar\";\nimport UpcomingMovies from \"../Components/UpcomingMovies\";\n\nfunction Home() {\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1`,\n      options\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        onSetMovies(data.results);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div>\n      <div id='home-container'>\n        <div id='home-name'>\n          <h1>Home</h1>\n        </div>\n        <SearchBar\n          searchValue={searchValue}\n          onChangeValue={(event) => setSearchValue(event.target.value)}\n        />\n      </div>\n      <div>\n        <FilteredMovies />\n        <UpcomingMovies listOfMovies={movies} onSetMovies={setMovies} />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,cAAc,MAAM,8BAA8B;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExCa,SAAS,CAAC,MAAM;IACdC,KAAK,CACF,mEAAkE,EACnEC,OACF,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,WAAW,CAACD,IAAI,CAACE,OAAO,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAKuB,EAAE,EAAC,gBAAgB;MAAAD,QAAA,gBACtBtB,OAAA;QAAKuB,EAAE,EAAC,WAAW;QAAAD,QAAA,eACjBtB,OAAA;UAAAsB,QAAA,EAAI;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACN3B,OAAA,CAACH,SAAS;QACRQ,WAAW,EAAEA,WAAY;QACzBuB,aAAa,EAAGC,KAAK,IAAKvB,cAAc,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA,CAACN,cAAc;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClB3B,OAAA,CAACF,cAAc;QAACkC,YAAY,EAAEzB,MAAO;QAACS,WAAW,EAAER;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CAlCQD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}