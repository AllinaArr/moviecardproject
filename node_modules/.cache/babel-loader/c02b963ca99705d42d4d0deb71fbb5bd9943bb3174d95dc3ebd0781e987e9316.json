{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Components/FilteredMovies.js\",\n  _s = $RefreshSig$();\nimport \"../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../Utils/options\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilteredMovies({\n  onSearch\n}) {\n  _s();\n  // const handleSearch = (event) => {\n  //   event.preventDefault();\n\n  //   const filtered = movies.filter((movie) =>\n  //     movie.original_title.includes(searchValue)\n  //   );\n\n  //   setFilteredMovies(filtered);\n  //   setSearchValue(\"\");\n\n  //   console.log(movies);\n  // };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(searchValue)}`;\n    fetch(url, options).then(response => response.json()).then(data => {\n      setFilteredMovies(data.results);\n    });\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"img-place\",\n    children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divForImg\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"grid-image\",\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divForBut\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"overlay-button\",\n          children: \"Add to my watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(FilteredMovies, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FilteredMovies;\nexport default FilteredMovies;\nvar _c;\n$RefreshReg$(_c, \"FilteredMovies\");","map":{"version":3,"names":["useEffect","useState","options","jsxDEV","_jsxDEV","FilteredMovies","onSearch","_s","url","encodeURIComponent","searchValue","fetch","then","response","json","data","setFilteredMovies","results","id","children","filteredMovies","map","movie","className","src","poster_path","alt","original_title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Components/FilteredMovies.js"],"sourcesContent":["import \"../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../Utils/options\";\n\nfunction FilteredMovies({ onSearch }) {\n  // const handleSearch = (event) => {\n  //   event.preventDefault();\n\n  //   const filtered = movies.filter((movie) =>\n  //     movie.original_title.includes(searchValue)\n  //   );\n\n  //   setFilteredMovies(filtered);\n  //   setSearchValue(\"\");\n\n  //   console.log(movies);\n  // };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${encodeURIComponent(\n      searchValue\n    )}`;\n\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((data) => {\n        setFilteredMovies(data.results);\n      });\n  }, [searchValue]);\n\n  return (\n    <div id='img-place'>\n      {filteredMovies.map((movie) => (\n        <div className='movie-container' key={movie.id}>\n          <div className='divForImg'>\n            <img\n              id='grid-image'\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n          </div>\n          <div className='divForBut'>\n            <button className='overlay-button'>Add to my watchlist</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FilteredMovies;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEAP,SAAS,CAAC,MAAM;IACd,MAAMQ,GAAG,GAAI,mDAAkDC,kBAAkB,CAC/EC,WACF,CAAE,EAAC;IAEHC,KAAK,CAACH,GAAG,EAAEN,OAAO,CAAC,CAChBU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,iBAAiB,CAACD,IAAI,CAACE,OAAO,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,oBACEN,OAAA;IAAKc,EAAE,EAAC,WAAW;IAAAC,QAAA,EAChBC,cAAc,CAACC,GAAG,CAAEC,KAAK,iBACxBlB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAJ,QAAA,gBAC9Bf,OAAA;QAAKmB,SAAS,EAAC,WAAW;QAAAJ,QAAA,eACxBf,OAAA;UACEc,EAAE,EAAC,YAAY;UACfM,GAAG,EAAG,mCAAkCF,KAAK,CAACG,WAAY,EAAE;UAC5DC,GAAG,EAAEJ,KAAK,CAACK;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAKmB,SAAS,EAAC,WAAW;QAAAJ,QAAA,eACxBf,OAAA;UAAQmB,SAAS,EAAC,gBAAgB;UAAAJ,QAAA,EAAC;QAAmB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA,GAV8BT,KAAK,CAACJ,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWzC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxB,EAAA,CA5CQF,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA8CvB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}