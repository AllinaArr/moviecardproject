{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Pages/TvShows.js\",\n  _s = $RefreshSig$();\nimport FilteredMovies from \"../Components/FilteredMovies\";\nimport RandomTVShows from \"../Components/RandomTVShows\";\nimport SearchBar from \"../Components/SearchBar\";\nimport { useState, useEffect } from \"react\";\nimport { options } from \"../Utils/options\";\nimport GendersFilter from \"../Components/GendersFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TvShows({\n  page,\n  setPage,\n  searchValue,\n  setSearchValue,\n  addMovie,\n  genres,\n  setGenres,\n  hoveredMovie,\n  setHoveredMovie,\n  movieAdded,\n  setMovieAdded,\n  modal,\n  setModal\n}) {\n  _s();\n  const [tvShows, setTvShows] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/tv/popular?language=en-US&page=1`, options).then(response => response.json()).then(data => {\n      setTvShows(data.results);\n    }).catch(err => console.error(err));\n  }, []);\n  const handleSearch = () => {\n    console.log(\"Searching for:\", searchValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"home-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"home-bar\",\n          children: \"TV Shows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchValue: searchValue,\n        onChangeValue: setSearchValue,\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GendersFilter, {\n        genres: genres,\n        setGenres: setGenres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchValue ? /*#__PURE__*/_jsxDEV(FilteredMovies, {\n        searchValue: searchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RandomTVShows, {\n        page: page,\n        setPage: setPage,\n        listOfMovies: tvShows,\n        addMovie: addMovie,\n        setTvShows: setTvShows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(TvShows, \"MEPPp7Rk+ooXqXJdZR7lhY2qH/w=\");\n_c = TvShows;\nexport default TvShows;\nvar _c;\n$RefreshReg$(_c, \"TvShows\");","map":{"version":3,"names":["FilteredMovies","RandomTVShows","SearchBar","useState","useEffect","options","GendersFilter","jsxDEV","_jsxDEV","TvShows","page","setPage","searchValue","setSearchValue","addMovie","genres","setGenres","hoveredMovie","setHoveredMovie","movieAdded","setMovieAdded","modal","setModal","_s","tvShows","setTvShows","fetch","then","response","json","data","results","catch","err","console","error","handleSearch","log","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onChangeValue","onSearch","listOfMovies","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Pages/TvShows.js"],"sourcesContent":["import FilteredMovies from \"../Components/FilteredMovies\";\nimport RandomTVShows from \"../Components/RandomTVShows\";\nimport SearchBar from \"../Components/SearchBar\";\nimport { useState, useEffect } from \"react\";\nimport { options } from \"../Utils/options\";\nimport GendersFilter from \"../Components/GendersFilter\";\n\nfunction TvShows({\n  page,\n  setPage,\n  searchValue,\n  setSearchValue,\n  addMovie,\n  genres,\n  setGenres,\n  hoveredMovie,\n  setHoveredMovie,\n  movieAdded,\n  setMovieAdded,\n  modal,\n  setModal,\n}) {\n  const [tvShows, setTvShows] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/tv/popular?language=en-US&page=1`,\n      options\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setTvShows(data.results);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const handleSearch = () => {\n    console.log(\"Searching for:\", searchValue);\n  };\n\n  return (\n    <div>\n      <div id='home-container'>\n        <div id='home-name'>\n          <h1 id='home-bar'>TV Shows</h1>\n        </div>\n      </div>\n      <div className='slide'>\n        <SearchBar\n          searchValue={searchValue}\n          onChangeValue={setSearchValue}\n          onSearch={handleSearch}\n        />\n        <GendersFilter genres={genres} setGenres={setGenres} />\n      </div>\n      <div>\n        {searchValue ? (\n          <FilteredMovies searchValue={searchValue} />\n        ) : (\n          <RandomTVShows\n            page={page}\n            setPage={setPage}\n            listOfMovies={tvShows}\n            addMovie={addMovie}\n            setTvShows={setTvShows}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TvShows;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}