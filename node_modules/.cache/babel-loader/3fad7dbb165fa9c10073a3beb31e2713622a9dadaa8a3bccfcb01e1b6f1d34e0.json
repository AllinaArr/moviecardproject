{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Components/UpcomingMovies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../index.css\";\nimport { options } from \"../Utils/options\";\nimport HoverBtns from \"./HoverBtns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpcomingMovies({\n  page,\n  setHighlyRated,\n  setPage,\n  listOfMovies,\n  addMovie\n}) {\n  _s();\n  const [hoveredMovie, setHoveredMovie] = useState(null);\n  const [movieAdded, setMovieAdded] = useState(false);\n  const [modal, setModal] = useState(false);\n  fetch(\"http://localhost:3000/movies\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: movie.id.toString(),\n      poster_path: movie.poster_path,\n      title: movie.title,\n      original_name: movie.original_name\n    })\n  }).then(response => response.json()).then(movie => {\n    addMovie(movie);\n    setMovieAdded(true);\n    setModal(true);\n    setTimeout(() => {\n      setModal(false);\n    }, 10000);\n  });\n  return /*#__PURE__*/_jsxDEV(HoverBtns, {\n    page: page,\n    setPage: setPage,\n    listOfMovies: listOfMovies,\n    addMovie: addMovie,\n    hoveredMovie: hoveredMovie,\n    setHoveredMovie: setHoveredMovie,\n    movieAdded: movieAdded,\n    setMovieAdded: setMovieAdded,\n    modal: modal,\n    setModal: setModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(UpcomingMovies, \"M2pPngRE7kQXONtzrNEs0JIAHKA=\");\n_c = UpcomingMovies;\nexport default UpcomingMovies;\nvar _c;\n$RefreshReg$(_c, \"UpcomingMovies\");","map":{"version":3,"names":["React","useState","options","HoverBtns","jsxDEV","_jsxDEV","UpcomingMovies","page","setHighlyRated","setPage","listOfMovies","addMovie","_s","hoveredMovie","setHoveredMovie","movieAdded","setMovieAdded","modal","setModal","fetch","method","headers","body","JSON","stringify","id","movie","toString","poster_path","title","original_name","then","response","json","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Components/UpcomingMovies.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../index.css\";\nimport { options } from \"../Utils/options\";\nimport HoverBtns from \"./HoverBtns\";\n\nfunction UpcomingMovies({\n  page,\n  setHighlyRated,\n  setPage,\n  listOfMovies,\n  addMovie,\n}) {\n  const [hoveredMovie, setHoveredMovie] = useState(null);\n  const [movieAdded, setMovieAdded] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  fetch(\"http://localhost:3000/movies\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: movie.id.toString(),\n      poster_path: movie.poster_path,\n      title: movie.title,\n      original_name: movie.original_name,\n    }),\n  })\n    .then((response) => response.json())\n    .then((movie) => {\n      addMovie(movie);\n      setMovieAdded(true);\n      setModal(true);\n      setTimeout(() => {\n        setModal(false);\n      }, 10000);\n    });\n\n  return (\n    <HoverBtns\n      page={page}\n      setPage={setPage}\n      listOfMovies={listOfMovies}\n      addMovie={addMovie}\n      hoveredMovie={hoveredMovie}\n      setHoveredMovie={setHoveredMovie}\n      movieAdded={movieAdded}\n      setMovieAdded={setMovieAdded}\n      modal={modal}\n      setModal={setModal}\n    />\n  );\n}\n\nexport default UpcomingMovies;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,cAAcA,CAAC;EACtBC,IAAI;EACJC,cAAc;EACdC,OAAO;EACPC,YAAY;EACZC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEzCkB,KAAK,CAAC,8BAA8B,EAAE;IACpCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,EAAE,EAAEC,KAAK,CAACD,EAAE,CAACE,QAAQ,CAAC,CAAC;MACvBC,WAAW,EAAEF,KAAK,CAACE,WAAW;MAC9BC,KAAK,EAAEH,KAAK,CAACG,KAAK;MAClBC,aAAa,EAAEJ,KAAK,CAACI;IACvB,CAAC;EACH,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEL,KAAK,IAAK;IACff,QAAQ,CAACe,KAAK,CAAC;IACfV,aAAa,CAAC,IAAI,CAAC;IACnBE,QAAQ,CAAC,IAAI,CAAC;IACdgB,UAAU,CAAC,MAAM;MACfhB,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,EAAE,KAAK,CAAC;EACX,CAAC,CAAC;EAEJ,oBACEb,OAAA,CAACF,SAAS;IACRI,IAAI,EAAEA,IAAK;IACXE,OAAO,EAAEA,OAAQ;IACjBC,YAAY,EAAEA,YAAa;IAC3BC,QAAQ,EAAEA,QAAS;IACnBE,YAAY,EAAEA,YAAa;IAC3BC,eAAe,EAAEA,eAAgB;IACjCC,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BC,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAEA;EAAS;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEN;AAAC1B,EAAA,CA/CQN,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAiDvB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}