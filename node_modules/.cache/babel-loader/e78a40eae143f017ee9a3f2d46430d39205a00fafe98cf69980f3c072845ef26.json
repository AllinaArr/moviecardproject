{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Components/ImagesPlace.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagesPlace() {\n  _s();\n  const imgPlace = document.querySelector(\".grid-container\");\n  let valueSpan = 0;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNDdkZTBlMGY4ZGZjZmM0ODRhYjIzZjk3OGFlYmM3OSIsInN1YiI6IjY2NGNiY2QzOThmNWZjNWJiNTU1MzBhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sFJvo3zcsYMRMFGJKNkpUUJXYS1tdwvJ7zFWLlf8ZpY\"\n      }\n    };\n    fetch(\"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\", options).then(response => response.json()).then(data => {\n      setMovies(data.results);\n    }).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divForImg\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"grid-image\",\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divForBut\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"overlay-button\",\n          children: \"Add to my watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  // function handleDatabase(movie) {\n  //   return (\n  //     <div className='movie-container' key='{movie.id}'>\n  //       <div className='divForImg'>\n  //         <img\n  //           id='grid-image'\n  //           src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n  //           alt={movie.original_title}\n  //         />\n  //       </div>\n  //       <div className='divForBut'>\n  //         <button className='overlay-button'>Add to my watchlist</button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  // return (\n  //   <div className='grid-container'>\n  //     {movies.map((movie) => handleDatabase(movie))}\n  //   </div>\n  // );\n}\n_s(ImagesPlace, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = ImagesPlace;\nexport default ImagesPlace;\nvar _c;\n$RefreshReg$(_c, \"ImagesPlace\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ImagesPlace","_s","imgPlace","document","querySelector","valueSpan","movies","setMovies","options","method","headers","accept","Authorization","fetch","then","response","json","data","results","catch","err","console","error","className","children","map","movie","id","src","poster_path","alt","original_title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Components/ImagesPlace.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../index.css\";\n\nfunction ImagesPlace() {\n  const imgPlace = document.querySelector(\".grid-container\");\n  let valueSpan = 0;\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNDdkZTBlMGY4ZGZjZmM0ODRhYjIzZjk3OGFlYmM3OSIsInN1YiI6IjY2NGNiY2QzOThmNWZjNWJiNTU1MzBhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sFJvo3zcsYMRMFGJKNkpUUJXYS1tdwvJ7zFWLlf8ZpY\",\n      },\n    };\n\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\",\n      options\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setMovies(data.results);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div className='grid-container'>\n      {movies.map((movie) => (\n        <div className='movie-container' key={movie.id}>\n          <div className='divForImg'>\n            <img\n              id='grid-image'\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n          </div>\n          <div className='divForBut'>\n            <button className='overlay-button'>Add to my watchlist</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  // function handleDatabase(movie) {\n  //   return (\n  //     <div className='movie-container' key='{movie.id}'>\n  //       <div className='divForImg'>\n  //         <img\n  //           id='grid-image'\n  //           src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n  //           alt={movie.original_title}\n  //         />\n  //       </div>\n  //       <div className='divForBut'>\n  //         <button className='overlay-button'>Add to my watchlist</button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  // return (\n  //   <div className='grid-container'>\n  //     {movies.map((movie) => handleDatabase(movie))}\n  //   </div>\n  // );\n}\n\nexport default ImagesPlace;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;EAC1D,IAAIC,SAAS,GAAG,CAAC;EAEjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EACX;MACJ;IACF,CAAC;IAEDC,KAAK,CACH,kEAAkE,EAClEL,OACF,CAAC,CACEM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdV,SAAS,CAACU,IAAI,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BlB,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChB3B,OAAA;MAAKwB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BzB,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBzB,OAAA;UACE4B,EAAE,EAAC,YAAY;UACfC,GAAG,EAAG,kCAAiCF,KAAK,CAACG,WAAY,EAAE;UAC3DC,GAAG,EAAEJ,KAAK,CAACK;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpC,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBzB,OAAA;UAAQwB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAmB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA,GAV8BT,KAAK,CAACC,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWzC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AACF;AAAClC,EAAA,CApEQD,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAsEpB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}