{"ast":null,"code":"var _jsxFileName = \"/Users/alinkarudanets/Development/code/moviecardproject/src/Components/GendersFilter.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { options } from \"../Utils/options\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GendersFilter() {\n  _s();\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en`, options).then(response => response.json()).then(data => {\n      console.log(\"WE GET ALL GENRES\");\n      setGenres(data.genres);\n    }).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", genre.name, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(GendersFilter, \"OACoFRc7CCgkBjNz6yRao2W4P/w=\");\n_c = GendersFilter;\nexport default GendersFilter;\nvar _c;\n$RefreshReg$(_c, \"GendersFilter\");","map":{"version":3,"names":["useEffect","useState","options","jsxDEV","_jsxDEV","GendersFilter","_s","genres","setGenres","fetch","then","response","json","data","console","log","catch","err","error","children","map","genre","index","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinkarudanets/Development/code/moviecardproject/src/Components/GendersFilter.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { options } from \"../Utils/options\";\n\nfunction GendersFilter() {\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en`, options)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"WE GET ALL GENRES\");\n        setGenres(data.genres);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div>\n      {genres.map((genre, index) => (\n        <div key={index}> {genre.name} </div>\n      ))}\n    </div>\n  );\n}\n\nexport default GendersFilter;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,2DAA0D,EAAEP,OAAO,CAAC,CACxEQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCP,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC;IACxB,CAAC,CAAC,CACDS,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAe,QAAA,EACGZ,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBlB,OAAA;MAAAe,QAAA,GAAiB,GAAC,EAACE,KAAK,CAACE,IAAI,EAAC,GAAC;IAAA,GAArBD,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAnBQD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAqBtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}